version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: puzzle-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - puzzle-network
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: puzzle-redis
    command: redis-server --appendonly yes --requirepass redispassword
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - puzzle-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # MQTT Broker (Mosquitto)
  mqtt:
    image: eclipse-mosquitto:2
    container_name: puzzle-mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./docker/mosquitto/config:/mosquitto/config
      - ./docker/mosquitto/data:/mosquitto/data
      - ./docker/mosquitto/log:/mosquitto/log
    networks:
      - puzzle-network

  # Collaborative Puzzle API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: final
    container_name: puzzle-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - ConnectionStrings__SqlServer=Server=sqlserver;Database=CollaborativePuzzle;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true
      - ConnectionStrings__Redis=redis:6379,password=redispassword,ssl=false,abortConnect=false
      - MQTT__Broker=mqtt
      - MQTT__Port=1883
      - MQTT__ClientId=puzzle-api
      - Jwt__Secret=YourSuperSecretKeyForJwtTokenGeneration123!
      - Jwt__Issuer=CollaborativePuzzle
      - Jwt__Audience=CollaborativePuzzleUsers
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
      mqtt:
        condition: service_started
    networks:
      - puzzle-network
    volumes:
      - ./appsettings.Development.json:/app/appsettings.Development.json:ro

  # Web UI (placeholder for future React/Angular app)
  # web:
  #   build:
  #     context: ./src/web
  #     dockerfile: Dockerfile
  #   container_name: puzzle-web
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - api
  #   networks:
  #     - puzzle-network

  # TURN Server for WebRTC
  coturn:
    image: coturn/coturn:latest
    container_name: puzzle-turn
    command: >
      -n 
      --lt-cred-mech 
      --fingerprint 
      --no-multicast-peers 
      --no-cli 
      --no-tlsv1 
      --no-tlsv1_1 
      --realm=puzzle.local 
      --user=testuser:testpassword 
      --external-ip=$$(hostname -I | awk '{print $$1}')
    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
      - "5349:5349/udp"
      - "5349:5349/tcp"
      - "49152-65535:49152-65535/udp"
    networks:
      - puzzle-network

networks:
  puzzle-network:
    driver: bridge
    name: puzzle-network

volumes:
  sqlserver-data:
  redis-data: