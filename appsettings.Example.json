{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning",
      "Microsoft.EntityFrameworkCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "DefaultConnection": "Server=YOUR_SERVER;Database=CollaborativePuzzle;User Id=YOUR_USER;Password=YOUR_PASSWORD;TrustServerCertificate=true;",
    "Redis": "YOUR_REDIS_CONNECTION_STRING",
    "AzureStorage": "DefaultEndpointsProtocol=https;AccountName=YOUR_STORAGE_ACCOUNT;AccountKey=YOUR_STORAGE_KEY;EndpointSuffix=core.windows.net"
  },
  "AzureKeyVault": {
    "VaultUri": "https://YOUR-KEYVAULT-NAME.vault.azure.net/",
    "TenantId": "YOUR_TENANT_ID",
    "ClientId": "YOUR_CLIENT_ID",
    "ClientSecret": "YOUR_CLIENT_SECRET"
  },
  "ApplicationInsights": {
    "ConnectionString": "InstrumentationKey=YOUR_INSTRUMENTATION_KEY;IngestionEndpoint=https://YOUR_REGION.in.applicationinsights.azure.com/"
  },
  "SignalR": {
    "RedisConnectionString": "YOUR_REDIS_CONNECTION_STRING",
    "EnableDetailedErrors": false,
    "KeepAliveInterval": "00:00:15",
    "ClientTimeoutInterval": "00:00:30",
    "HandshakeTimeout": "00:00:15",
    "MaximumReceiveMessageSize": 32768
  },
  "WebRTC": {
    "IceServers": [
      {
        "urls": "stun:stun.l.google.com:19302"
      },
      {
        "urls": "turn:YOUR_TURN_SERVER:3478",
        "username": "YOUR_TURN_USERNAME",
        "credential": "YOUR_TURN_CREDENTIAL"
      }
    ]
  },
  "MQTT": {
    "BrokerHost": "YOUR_MQTT_BROKER",
    "BrokerPort": 1883,
    "UseSSL": false,
    "Username": "YOUR_MQTT_USERNAME",
    "Password": "YOUR_MQTT_PASSWORD",
    "ClientId": "CollaborativePuzzle-{MachineName}"
  },
  "Authentication": {
    "AzureAd": {
      "Instance": "https://login.microsoftonline.com/",
      "Domain": "YOUR_DOMAIN",
      "TenantId": "YOUR_TENANT_ID",
      "ClientId": "YOUR_CLIENT_ID",
      "ClientSecret": "YOUR_CLIENT_SECRET",
      "CallbackPath": "/signin-oidc",
      "SignedOutCallbackPath": "/signout-callback-oidc"
    },
    "JwtBearer": {
      "Authority": "https://login.microsoftonline.com/YOUR_TENANT_ID/v2.0",
      "Audience": "YOUR_CLIENT_ID",
      "RequireHttpsMetadata": true,
      "SaveToken": true,
      "TokenValidationParameters": {
        "ValidateIssuerSigningKey": true,
        "ValidateIssuer": true,
        "ValidateAudience": true,
        "ValidateLifetime": true,
        "ClockSkew": "00:05:00"
      }
    }
  },
  "Cors": {
    "AllowedOrigins": [
      "http://localhost:3000",
      "https://localhost:3001",
      "https://YOUR_PRODUCTION_DOMAIN"
    ],
    "AllowCredentials": true
  },
  "RateLimiting": {
    "PermitLimit": 100,
    "Window": "00:01:00",
    "QueueProcessingOrder": "OldestFirst",
    "QueueLimit": 50
  },
  "Kestrel": {
    "Endpoints": {
      "Https": {
        "Url": "https://localhost:5001",
        "Protocols": "Http1AndHttp2AndHttp3"
      },
      "Http": {
        "Url": "http://localhost:5000",
        "Protocols": "Http1AndHttp2"
      }
    }
  },
  "Serilog": {
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File", "Serilog.Sinks.ApplicationInsights" ],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "Microsoft.Hosting.Lifetime": "Information",
        "Microsoft.EntityFrameworkCore": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj} {Properties:j}{NewLine}{Exception}"
        }
      },
      {
        "Name": "File",
        "Args": {
          "path": "logs/log-.txt",
          "rollingInterval": "Day",
          "rollOnFileSizeLimit": true,
          "fileSizeLimitBytes": 10485760,
          "retainedFileCountLimit": 7,
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId", "WithEnvironmentName" ]
  },
  "HealthChecks": {
    "SqlServer": {
      "ConnectionString": "USE_CONNECTION_STRING_FROM_ABOVE",
      "HealthQuery": "SELECT 1"
    },
    "Redis": {
      "ConnectionString": "USE_CONNECTION_STRING_FROM_ABOVE"
    },
    "AzureStorage": {
      "ConnectionString": "USE_CONNECTION_STRING_FROM_ABOVE",
      "ContainerName": "puzzle-images"
    }
  },
  "HangFire": {
    "ConnectionString": "USE_CONNECTION_STRING_FROM_ABOVE",
    "DashboardPath": "/hangfire",
    "RequireAuthorization": true
  }
}